#!/usr/bin/env python3
"""
Export YouTube and Amazon cookies from browser using Playwright
This creates a proper cookies.txt file with actual values
"""
from pathlib import Path
from playwright.sync_api import sync_playwright
import time

def export_cookies():
    """Export cookies from logged-in browser session"""
    repo_root = Path(__file__).resolve().parent.parent
    cookies_file = repo_root / "secrets" / "cookies.txt"
    
    print("üç™ Exporting YouTube and Amazon Cookies")
    print("=" * 50)
    print("\n‚ö†Ô∏è  IMPORTANT:")
    print("   1. Make sure you're logged into YouTube in Chrome")
    print("   2. Make sure you're logged into Amazon in Chrome")
    print("   3. Close any YouTube/Amazon tabs before continuing")
    print("\nThis will open a browser window. Please wait...")
    input("\nPress Enter to continue...")
    
    with sync_playwright() as p:
        # Launch browser (will use default profile which has your login)
        browser = p.chromium.launch(headless=False, channel="chrome")
        context = browser.new_context()
        page = context.new_page()
        
        # Visit YouTube to trigger cookie creation
        print("\nüì∫ Visiting YouTube...")
        page.goto("https://www.youtube.com", wait_until="networkidle")
        time.sleep(3)
        
        # Visit Amazon to trigger cookie creation
        print("üõí Visiting Amazon...")
        page.goto("https://www.amazon.com", wait_until="networkidle")
        time.sleep(3)
        
        # Get all cookies
        print("\nüíæ Extracting cookies...")
        cookies = browser.cookies()
        
        # Filter for YouTube and Amazon
        yt_cookies = [c for c in cookies if 'youtube.com' in c.get('domain', '')]
        amz_cookies = [c for c in cookies if 'amazon.com' in c.get('domain', '')]
        
        print(f"   Found {len(yt_cookies)} YouTube cookies")
        print(f"   Found {len(amz_cookies)} Amazon cookies")
        
        if not yt_cookies:
            print("\n‚ùå ERROR: No YouTube cookies found!")
            print("   Please make sure you're logged into YouTube in Chrome")
            browser.close()
            return False
        
        # Write to Netscape format
        print(f"\n‚úçÔ∏è  Writing to: {cookies_file}")
        with open(cookies_file, 'w', encoding='utf-8') as f:
            f.write("# Netscape HTTP Cookie File\n")
            f.write("# This file is generated by export_cookies.py\n")
            f.write(f"# Generated: {time.strftime('%Y-%m-%d %H:%M:%S')}\n")
            f.write("# Contains cookies for: YouTube, Amazon\n")
            f.write("#\n")
            f.write("# Format: domain\tflag\tpath\tsecure\texpiration\tname\tvalue\n\n")
            
            # Write YouTube cookies
            for cookie in yt_cookies:
                domain = cookie.get('domain', '')
                flag = 'TRUE' if domain.startswith('.') else 'FALSE'
                path = cookie.get('path', '/')
                secure = 'TRUE' if cookie.get('secure', False) else 'FALSE'
                expiration = int(cookie.get('expires', -1))
                if expiration == -1:
                    expiration = 0
                name = cookie.get('name', '')
                value = cookie.get('value', '')
                
                f.write(f"{domain}\t{flag}\t{path}\t{secure}\t{expiration}\t{name}\t{value}\n")
            
            # Write Amazon cookies
            for cookie in amz_cookies:
                domain = cookie.get('domain', '')
                flag = 'TRUE' if domain.startswith('.') else 'FALSE'
                path = cookie.get('path', '/')
                secure = 'TRUE' if cookie.get('secure', False) else 'FALSE'
                expiration = int(cookie.get('expires', -1))
                if expiration == -1:
                    expiration = 0
                name = cookie.get('name', '')
                value = cookie.get('value', '')
                
                f.write(f"{domain}\t{flag}\t{path}\t{secure}\t{expiration}\t{name}\t{value}\n")
        
        browser.close()
        
        # Verify file
        file_size = cookies_file.stat().st_size
        print(f"\n‚úÖ Cookies exported successfully!")
        print(f"   File size: {file_size:,} bytes")
        print(f"   Total cookies: {len(yt_cookies) + len(amz_cookies)}")
        
        if file_size < 1000:
            print("\n‚ö†Ô∏è  WARNING: File seems too small!")
            print("   You may need to log into YouTube/Amazon first")
            return False
        
        return True

if __name__ == "__main__":
    try:
        success = export_cookies()
        if success:
            print("\nüéâ Done! Now encrypt this file:")
            print("   python scripts\\encrypt_secrets.py")
        else:
            print("\n‚ùå Export failed. Please check the issues above.")
    except Exception as e:
        print(f"\n‚ùå Error: {e}")
        print("\nTroubleshooting:")
        print("  1. Make sure Chrome is closed")
        print("  2. Make sure you're logged into YouTube and Amazon")
        print("  3. Try running as Administrator")
